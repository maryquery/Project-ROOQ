(function() {
  var APIRequest, MusicPlayerAPI, request;

  request = require("request");

  APIRequest = (function() {
    function APIRequest(url1, token1, action, cb1) {
      this.url = url1;
      this.token = token1;
      this.action = action;
      this.cb = cb1;
    }

    APIRequest.prototype.respond = function(cb) {
      return function(req, res, body) {
        var error;
        if (cb != null) {
          try {
            return cb(JSON.parse(body));
          } catch (_error) {
            error = _error;
            return cb({
              status: false,
              message: "Connection failed",
              error: error
            });
          }
        }
      };
    };

    APIRequest.prototype.get = function(cb) {
      return request.get(this.url + "/remote/" + this.token + "/" + this.action, this.respond(cb));
    };

    APIRequest.prototype.post = function(data, cb) {
      if (typeof data === "function") {
        return request.post(this.url + "/remote/" + this.token + "/" + this.action, this.respond(data));
      } else if ((data != null) && (cb == null)) {
        return request.post(this.url + "/remote/" + this.token + "/" + this.action, {
          form: data
        });
      } else if ((data != null) && typeof cb === "function") {
        return request.post(this.url + "/remote/" + this.token + "/" + this.action, {
          form: data
        }, this.respond(cb));
      } else {
        return request.post(this.url + "/remote/" + this.token + "/" + this.action);
      }
    };

    return APIRequest;

  })();

  MusicPlayerAPI = (function() {
    function MusicPlayerAPI(token1, url1) {
      this.token = token1;
      this.url = url1;
      this.play = new APIRequest(this.url, this.token, "play");
      this.forward = new APIRequest(this.url, this.token, "forward");
      this.backward = new APIRequest(this.url, this.token, "backward");
      this.user = new APIRequest(this.url, this.token, "user");
      this.subreddits = new APIRequest(this.url, this.token, "subreddits");
      this.song = new APIRequest(this.url, this.token, "song");
    }

    return MusicPlayerAPI;

  })();

  module.exports = function(token, url) {
    if (typeof token === "string") {
      return new MusicPlayerAPI(token, url || "https://reddit.musicplayer.io");
    } else {
      return new MusicPlayerAPI(token.token, token.url);
    }
  };

}).call(this);
